{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "name" : "categories",
  "children" : [ {
    "name" : "Product defects",
    "children" : [ {
      "name" : "assert.deepStrictEqual(received, expected)\n\nExpected value to deeply and strictly equal to:\n  {\"additionalneeds\": \"Breakfast\", \"bookingdates\": {\"checkin\": \"2019-01-01\", \"checkout\": \"2020-06-23\"}, \"depositpaid\": false, \"firstname\": \"Mary\", \"lastname\": \"Jones\", \"totalprice\": 238}\nReceived:\n  {\"additionalneeds\": \"Breakfast\", \"bookingdates\": {\"checkin\": \"2017-12-20\", \"checkout\": \"2018-06-11\"}, \"depositpaid\": true, \"firstname\": \"Mark\", \"lastname\": \"Ericsson\", \"totalprice\": 756}\n\nDifference:\n\n- Expected\n+ Received\n\n  Object {\n    \"additionalneeds\": \"Breakfast\",\n    \"bookingdates\": Object {\n-     \"checkin\": \"2019-01-01\",\n-     \"checkout\": \"2020-06-23\",\n+     \"checkin\": \"2017-12-20\",\n+     \"checkout\": \"2018-06-11\",\n    },\n-   \"depositpaid\": false,\n-   \"firstname\": \"Mary\",\n-   \"lastname\": \"Jones\",\n-   \"totalprice\": 238,\n+   \"depositpaid\": true,\n+   \"firstname\": \"Mark\",\n+   \"lastname\": \"Ericsson\",\n+   \"totalprice\": 756,\n  }\n    at Expect._validateJson (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:214:14)\n    at Expect.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:52:10)\n    at Tosser.validateResponse (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:225:23)\n    at Tosser.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:192:18)\n    at Tosser.toss (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:42:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
      "children" : [ {
        "name" : "Get specific valid ID",
        "uid" : "b7817427ab2455b7",
        "parentUid" : "1b9ff9be7ef2f54750f0d7e0f0217fb8",
        "status" : "failed",
        "time" : {
          "start" : 1645089979471,
          "stop" : 1645089980524,
          "duration" : 1053
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      } ],
      "uid" : "1b9ff9be7ef2f54750f0d7e0f0217fb8"
    }, {
      "name" : "assert.strictEqual(received, expected)\n\nExpected value to strictly be equal to:\n  200\nReceived:\n  undefined\n\nMessage:\n  HTTP status undefined !== 200\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Expect._validateStatus (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:100:14)\n    at Expect.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:45:10)\n    at Tosser.validateResponse (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:225:23)\n    at Tosser.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:192:18)\n    at Tosser.toss (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:42:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
      "children" : [ {
        "name" : "Update booking - valid",
        "uid" : "c0495f30a084d0d0",
        "parentUid" : "a5550038dbe16edcc059735644a5ac40",
        "status" : "failed",
        "time" : {
          "start" : 1645089979475,
          "stop" : 1645089979501,
          "duration" : 26
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Partial update booking - firstname & lastname",
        "uid" : "5c5997fd28177dc8",
        "parentUid" : "a5550038dbe16edcc059735644a5ac40",
        "status" : "failed",
        "time" : {
          "start" : 1645089979511,
          "stop" : 1645089979529,
          "duration" : 18
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Partial update booking - total price & deposit paid",
        "uid" : "79a1ee1957643765",
        "parentUid" : "a5550038dbe16edcc059735644a5ac40",
        "status" : "failed",
        "time" : {
          "start" : 1645089979530,
          "stop" : 1645089979532,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Partial update booking - checkin & checkout date",
        "uid" : "20ba6aa15eae255a",
        "parentUid" : "a5550038dbe16edcc059735644a5ac40",
        "status" : "failed",
        "time" : {
          "start" : 1645089979532,
          "stop" : 1645089979535,
          "duration" : 3
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Partial update booking - additional needs",
        "uid" : "b1c73dd28286a9d3",
        "parentUid" : "a5550038dbe16edcc059735644a5ac40",
        "status" : "failed",
        "time" : {
          "start" : 1645089979536,
          "stop" : 1645089979538,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      } ],
      "uid" : "a5550038dbe16edcc059735644a5ac40"
    }, {
      "name" : "assert.strictEqual(received, expected)\n\nExpected value to strictly be equal to:\n  405\nReceived:\n  undefined\n\nMessage:\n  HTTP status undefined !== 405\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Expect._validateStatus (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:100:14)\n    at Expect.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:45:10)\n    at Tosser.validateResponse (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:225:23)\n    at Tosser.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:192:18)\n    at Tosser.toss (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:42:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
      "children" : [ {
        "name" : "Update booking - non-existent",
        "uid" : "b8ace5e2bc156e28",
        "parentUid" : "764ac447d2e9dec9d3ab5a518415a873",
        "status" : "failed",
        "time" : {
          "start" : 1645089979501,
          "stop" : 1645089979504,
          "duration" : 3
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Partial update booking - non-existent booking",
        "uid" : "479aecd9a11cfcc2",
        "parentUid" : "764ac447d2e9dec9d3ab5a518415a873",
        "status" : "failed",
        "time" : {
          "start" : 1645089979538,
          "stop" : 1645089979540,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      } ],
      "uid" : "764ac447d2e9dec9d3ab5a518415a873"
    }, {
      "name" : "assert.strictEqual(received, expected)\n\nExpected value to strictly be equal to:\n  51\nReceived:\n  26\n\nMessage:\n  JSON Length 26 !== 51\n    at Expect._validateJsonLength (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:367:16)\n    at Expect.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:62:10)\n    at Tosser.validateResponse (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:225:23)\n    at Tosser.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:192:18)\n    at Tosser.toss (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:42:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
      "children" : [ {
        "name" : "Get all IDs",
        "uid" : "d53da07e1e3ccd23",
        "parentUid" : "c52021370e92150d9fc0716b1c666fda",
        "status" : "failed",
        "time" : {
          "start" : 1645089979509,
          "stop" : 1645089980587,
          "duration" : 1078
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      } ],
      "uid" : "c52021370e92150d9fc0716b1c666fda"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n\nExpected value to deeply and strictly equal to:\n  [{\"bookingid\": 33}]\nReceived:\n  []\n\nDifference:\n\n- Expected\n+ Received\n\n- Array [\n-   Object {\n-     \"bookingid\": 33,\n-   },\n- ]\n+ Array []\n    at Expect._validateJson (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:214:14)\n    at Expect.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/expect.js:52:10)\n    at Tosser.validateResponse (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:225:23)\n    at Tosser.validate (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:192:18)\n    at Tosser.toss (/Users/cb/Documents/js-automation/test-automation-bucket-part2-examples-main/API/PactumJS-Mocha-RestfulBooker/node_modules/pactum/src/models/Tosser.js:42:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
      "children" : [ {
        "name" : "Get booking ID by existent firstname",
        "uid" : "25c8e7ff4d8d5d1e",
        "parentUid" : "f47f8d8548c834020d8a8e76495bcc78",
        "status" : "failed",
        "time" : {
          "start" : 1645089980587,
          "stop" : 1645089981359,
          "duration" : 772
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Get booking ID by existent lastname",
        "uid" : "cd3778a893357907",
        "parentUid" : "f47f8d8548c834020d8a8e76495bcc78",
        "status" : "failed",
        "time" : {
          "start" : 1645089981360,
          "stop" : 1645089982097,
          "duration" : 737
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      }, {
        "name" : "Get booking ID by existent firstname and lastname",
        "uid" : "4deb2291853fe46e",
        "parentUid" : "f47f8d8548c834020d8a8e76495bcc78",
        "status" : "failed",
        "time" : {
          "start" : 1645089982098,
          "stop" : 1645089982878,
          "duration" : 780
        },
        "flaky" : false,
        "newFailed" : false,
        "newPassed" : false,
        "newBroken" : false,
        "retriesCount" : 1,
        "retriesStatusChange" : true,
        "parameters" : [ ]
      } ],
      "uid" : "f47f8d8548c834020d8a8e76495bcc78"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ]
}