"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerAllureReporter = void 0;
const path_1 = __importDefault(require("path"));
const allure_reporter_1 = require("./allure-reporter");
const jasmine_allure_reporter_1 = require("./jasmine-allure-reporter");
function registerAllureReporter(config, jasmineCustom) {
    const reporter = (global.reporter = new allure_reporter_1.AllureReporter(config));
    jasmine
        .getEnv()
        .addReporter(jasmineCustom
        ? jasmineCustom(reporter)
        : new jasmine_allure_reporter_1.JasmineAllureReporter(reporter));
}
exports.registerAllureReporter = registerAllureReporter;
class JestAllureReporter {
    constructor(globalConfig, options = {}) {
        this.reporterOptions = {
            resultsDir: path_1.default.resolve('.', options.resultsDir || 'allure-results'),
        };
    }
    onRunStart(results, options) { }
    onTestStart(test) {
        const setupPath = require.resolve('./setup-default');
        const setupTestFrameworkScriptFile = test.context.config.setupTestFrameworkScriptFile;
        if (!setupTestFrameworkScriptFile) {
            test.context.config = Object.assign(Object.assign({}, test.context.config), { setupTestFrameworkScriptFile: setupPath });
        }
    }
}
exports.default = JestAllureReporter;
